name: 'coursier-setup'
description: 'Use Coursier to install JVM and Scala apps'
author: 'Alexey Alekhin'
branding:
  icon: 'anchor'
  color: 'green'
inputs:
  jvm:
    description: 'JVM to install (leave empty to use default)'
    required: false
    default: ''
  apps:
    description: 'Applications to install'
    required: false
    default: 'sbtn'
outputs:
  cs-version:
    description: 'Version of the installed Coursier'
    value: ${{ steps.cs-setup.outputs.cs-version }}
runs:
  using: "composite"
  steps:
    - id: cs-setup
      shell: bash
      run: |
        echo '::group::Install Coursier'
        curl -sfLo cs https://git.io/coursier-cli-linux
        chmod +x cs
        ./cs --help
        echo "::set-output name=cs-version::$(./cs --version)"
        echo '::endgroup::'

        echo '::group::Install JVM'
        JVM=""
        if [ "${{ inputs.jvm }}" ]; then
            JVM="--jvm ${{ inputs.jvm }}"
        fi
        if [ -z "$JVM" ] && [ "$JAVA_HOME" ]; then
            echo "skipping, JVM is already installed in $JAVA_HOME"
        else
            ./cs java $JVM -version
            echo "JAVA_HOME=$(./cs java-home $JVM)" >> $GITHUB_ENV
            echo "$(./cs java-home $JVM)/bin" >> $GITHUB_PATH
        fi
        echo '::endgroup::'

        echo '::group::Install Apps'
        if [ "${{ inputs.apps }}" ]; then
            export COURSIER_BIN_DIR=${{ github.action_path }}/apps
            echo "COURSIER_BIN_DIR=$COURSIER_BIN_DIR" >> $GITHUB_ENV
            echo "$COURSIER_BIN_DIR" >> $GITHUB_PATH
            ./cs install cs ${{ inputs.apps }}
        fi
        echo '::endgroup::'
